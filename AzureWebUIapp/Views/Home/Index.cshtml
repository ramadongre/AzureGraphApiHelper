@{
    ViewBag.Title = "Home Page";
}

@model AzureWebUIapp.Models.SetAPIAccessModel

@*<h1>Perform Azure AD actions using Microsoft Graph/Azure AD Graph API</h1>
    <hr />*@

@if (HttpContext.Current.User.Identity.IsAuthenticated)
{
    <div class="row" style="padding-top:20px">
        <div class="col-sm-3" style="padding-left:10px;">
            @Html.LabelFor(a => a.accessMode)
        </div>
        <div class="col-sm-5">
            @*@Html.TextBoxFor(a => a.AppName, new { Class = "form-control" })*@
            @Html.DropDownListFor(a => a.accessMode, Model.AccessModes, new { Class = "form-control", onchange = "return setInvocationMethod();" })
        </div>

    </div>
    <div class="row" style="padding-top:20px">
        <div class="col-md-12" style="padding-top:5px;">
            @Html.ActionLink("List claims for logged in user", "ListUserClaims", "Users")
        </div>
        <div class="col-md-12" style="padding-top:5px;">
            @Html.ActionLink("List Tentant Guest Users", "GuestUsers", "Users")
        </div>
        <div class="col-md-12" style="padding-top:5px;">
            @Html.ActionLink("List Tentant Applications", "ListTenantApps", "Users")
        </div>
        <div class="col-md-12" style="padding-top:5px;">
            @Html.ActionLink("Get details for a user", "GetUser", "Users")
        </div>
        <div class="col-md-12" style="padding-top:5px;">
            @Html.ActionLink("Add Guest User", "AddGuestUser", "Users")
        </div>
        <div class="col-md-12" style="padding-top:5px;">
            @Html.ActionLink("Update User", "UpdateUser", "Users")
        </div>
        <div class="col-md-12" style="padding-top:5px;">
            @Html.ActionLink("Associate user with a group", "AssociateUserWithGroup", "Users")
        </div>
        <div class="col-md-12" style="padding-top:5px;">
            @Html.ActionLink("Remove user from a group", "DeAssociateUserWithGroup", "Users")
        </div>
        <div class="col-md-12" style="padding-top:5px;">
            @Html.ActionLink("Add application role to a user", "AddAppRoleToUser", "Users")
        </div>
        <div class="col-md-12" style="padding-top:5px;">
            @Html.ActionLink("Remove an application role from a user", "RemoveAppRoleFromUser", "Users")
        </div>
        <div class="col-md-12" style="padding-top:5px;">
            @Html.ActionLink("Assign extension attribute to a user", "AssignExtAttribToUser", "Users")
        </div>
        @if (HttpContext.Current.Session["InvocationMethod"] != null && HttpContext.Current.Session["InvocationMethod"].ToString() == "D")
        {
            <div class="col-md-12" style="padding-top:5px;">
                @Html.ActionLink("List Access Reviews For Current Tenant", "ListAccessReviews", "Users")
            </div>
        }
    </div>
}
else
{
    <div class="row" style="padding-top:20px">
        <div class="col-md-12 form-group" style="font-weight:bold;font-size:larger;">
            @Html.ActionLink("Sign into continue", "Signin", "Account")
        </div>
    </div>
}

<script type="text/javascript">

    function setInvocationMethod() {

        var ddlInvokeMethod = $("#accessMode").val(); //alert(app);

        if (ddlInvokeMethod == null || ddlInvokeMethod == '')
            return false;

        $.ajax({
            url: getBHISAbsoluteUrl('~/users/SetAPIInvokeMethod?invoketypeValue=' + ddlInvokeMethod),
            type: 'POST',
            datatype: "html",
            cache: false,
            success: function (jsondata) {
                location.reload();
            },
            error: function (e) {
                alert('error occured: ' + e);
            }
        });

        return false;
    }

</script>
